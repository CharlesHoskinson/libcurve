curve_server(3)
===============

NAME
----
curve_server - Secure server socket

SYNOPSIS
--------
----
//  Create a new curve_server instance
CZMQ_EXPORT curve_server_t *
    curve_server_new (void);

//  Destructor
CZMQ_EXPORT void
    curve_server_destroy (curve_server_t **self_p);
    
//  Bind server socket to local endpoint
CZMQ_EXPORT int
    curve_server_bind (curve_server_t *self, const char *endpoint);

//  Get socket handle, for polling
CZMQ_EXPORT void *
    curve_server_handle (curve_server_t *self);

//  Self test of this class
void
    curve_server_test (bool verbose);
----

DESCRIPTION
-----------

Implements the client and server sockets. This class encodes and decodes
zframes. All I/O is the responsibility of the caller. This is the 
reference implementation of CurveZMQ. You will not normally want to use
it directly in application code as the API is low-level and complex.
TODO: authentication via ZAP - http://rfc.zeromq.org/spec:27/ZAP


EXAMPLE
-------
.From curve_server_test method
----
    curve_server_t *curve = curve_server_new ();
    curve_server_destroy (&curve);
----

SEE ALSO
--------
linkczmq:czmq[7]
